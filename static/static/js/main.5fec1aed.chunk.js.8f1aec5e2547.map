{"version":3,"sources":["actions/types.js","actions/auth.js","components/Header.js","components/Navbar.js","components/Home.js","components/UnAuthorized.js","components/oligos/OligoList.js","actions/oligos.js","components/oligos/OligoDetails.js","components/oligos/OligoForm.js","components/oligos/OligoAddEdit.js","components/auth/RegisterForm.js","components/auth/LoginForm.js","reducers/auth.js","reducers/index.js","reducers/oligos.js","store.js","App.js","reportWebVitals.js","index.js"],"names":["USER_LOADING","USER_LOADED","AUTH_ERROR","REGISTER_SUCCESS","REGISTER_FAIL","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT_SUCCESS","GET_OLIGOS","GET_OLIGO","ADD_OLIGO","DELETE_OLIGO","EDIT_OLIGO","BAD_REQUEST","tokenConfig","getState","token","auth","config","headers","connect","state","logout","dispatch","a","axios","post","type","props","user","isAuthenticated","userLinks","Dropdown","as","NavItem","className","Toggle","NavLink","username","Menu","Item","href","onClick","guestLinks","to","src","process","alt","NavbarMenu","Nav","Link","Divider","class","Home","UnAuthorized","useState","data","setData","currentPage","setCurrentPage","offset","pageCount","Math","ceil","length","useEffect","auth_token","get","res","getData","currentPageData","slice","map","oligo","id","oligo_name","gene_locus","colSpan","sequence","details","Fragment","Table","striped","bordered","hover","previous","Label","nextLabel","onPageChange","e","selected","containerClassName","pageLinkClassName","previousLinkClassName","nextLinkClassName","disabledClassName","activeClassName","defaults","baseURL","getOligo","payload","ownProps","oligos","match","params","deleteOligo","delete","useParams","history","useHistory","alert","useAlert","Container","Col","Row","created_date","modified_date","concentration","grade","usages","usage","i","organism","primer_position","primer_partner","Button","variant","window","confirm","show","push","fieldInput","input","label","text","value","undefined","rows","options","meta","touched","error","fieldAttrs","Form","Group","column","sm","FormControl","onChange","option","Text","muted","OligoForm","mode","handleSubmit","reset","usageData","setUsageData","getOptionsData","onSubmit","formValues","go","onReset","Field","name","component","readOnly","defaultValue","multiple","goBack","reduxForm","form","validate","values","result","touchOnBlur","enableReinitialize","min","max","addOligo","stopSubmit","response","editOligo","patch","setMode","setUser","isAddMode","initialValues","placeholder","RegisterForm","register","required","minLength3","maxLength15","passwordMatch","allValues","password","email","body","JSON","stringify","LoginForm","login","initialState","isLoading","localStorage","getItem","appReducer","combineReducers","formReducer","action","_","mapKeys","omit","setItem","removeItem","rootReducer","store","createStore","composeWithDevTools","applyMiddleware","reduxThunk","App","exact","path","OligoList","OligoDetails","OligoAddEdit","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","template","AlertTemplate","document","getElementById"],"mappings":"oTACaA,EAAe,eACfC,EAAc,cACdC,EAAa,aACbC,EAAmB,mBACnBC,EAAgB,gBAChBC,EAAgB,gBAChBC,EAAa,aACbC,EAAiB,iBAGjBC,EAAa,aACbC,EAAY,YACZC,EAAY,YACZC,EAAe,eACfC,EAAa,aACbC,EAAc,cC6CdC,EAAc,SAAAC,GAEzB,IAAMC,EAAQD,IAAWE,KAAKD,MAGxBE,EAAS,CACbC,QAAS,CACP,eAAgB,qBAQpB,OAJIH,IACFE,EAAOC,QAAP,8BAA2CH,IAGtCE,G,gBCTT,IAIeE,eAJS,SAAAC,GAAK,MAAK,CAChCJ,KAAMI,EAAMJ,QAKZ,CAAEK,ODOkB,yDAAM,WAAOC,EAAUR,GAAjB,SAAAS,EAAA,sEACpBC,IAAMC,KAAK,mBAAoB,KAAMZ,EAAYC,IAD7B,OAE1BQ,EAAS,CACPI,KAAMpB,IAHkB,2CAAN,0DCTPa,EA1Df,SAAgBQ,GAAQ,IAAD,EAEaA,EAAMX,KAAhCY,EAFa,EAEbA,KAAMC,EAFO,EAEPA,gBAERC,EACJ,eAACC,EAAA,EAAD,CAAUC,GAAIC,IAASC,UAAU,MAAjC,UACE,cAACH,EAAA,EAASI,OAAV,CAAiBH,GAAII,IAASF,UAAU,eAAxC,SACE,+BAAON,EAAOA,EAAKS,SAAW,OAEhC,cAACN,EAAA,EAASO,KAAV,CAAeJ,UAAU,qBAAzB,SACE,cAACH,EAAA,EAASQ,KAAV,CAAeC,KAAK,IAApB,SACE,qBAAKC,QAASd,EAAMN,OAApB,2BAMFqB,EACJ,qBAAKR,UAAU,WAAf,SACE,qBAAIA,UAAU,iBAAd,UACE,oBAAIA,UAAU,gBAAd,SACE,cAAC,IAAD,CAAMS,GAAG,YAAT,SACE,+CAGJ,sBAAMT,UAAU,kBAChB,oBAAIA,UAAU,gBAAd,SACE,cAAC,IAAD,CAAMS,GAAG,SAAT,SACE,kDAOV,OACE,qBAAKT,UAAU,SAAf,SACE,sBAAKA,UAAU,aAAf,UACE,qBAAKA,UAAU,OAAf,SACE,qBACEA,UAAU,WACVU,IAAKC,4BACLC,IAAI,8CAGR,qBAAKZ,UAAU,OAAf,SACIL,EAAkBC,EAAYY,Y,2BCnB3BK,MA1Bf,WACE,OACE,eAACC,EAAA,EAAD,CAAKd,UAAU,uBAAf,UACE,cAACc,EAAA,EAAIT,KAAL,UACE,eAACS,EAAA,EAAIC,KAAL,CAAUT,KAAK,IAAf,UACE,+BAAM,cAAC,IAAD,MACN,6CAGJ,eAACT,EAAA,EAAD,CAAUC,GAAIC,IAAd,UACE,eAACF,EAAA,EAASI,OAAV,CAAiBH,GAAII,IAASF,UAAU,WAAxC,UACE,+BAAM,cAAC,IAAD,MACN,6CAEF,eAACH,EAAA,EAASO,KAAV,CAAeJ,UAAU,iBAAzB,UACE,cAAC,IAAD,CAAMS,GAAG,UAAT,uBACA,cAAC,IAAD,CAAMA,GAAG,OAAT,2BACA,cAACZ,EAAA,EAASmB,QAAV,IACA,cAAC,IAAD,CAAMP,GAAG,IAAIQ,MAAM,WAAnB,8BACA,cAAC,IAAD,CAAMR,GAAG,IAAIQ,MAAM,WAAnB,uCCfKC,MAhBf,WACE,OACE,gCACE,oBAAIlB,UAAU,QAAd,2CACA,uBACA,yNAGA,uBACA,sG,yCCASmB,MARf,WACE,OACE,yICwGJ,IAKelC,eALS,SAAAC,GAAK,MAAK,CAEhCJ,KAAMI,EAAMJ,QAGCG,EApGf,SAAmBQ,GAGjB,IAEQE,EAAoBF,EAAMX,KAA1Ba,gBACFd,EAAQY,EAAMX,KAAKD,MAND,EAQAuC,mBAAS,IART,mBAQjBC,EARiB,KAQXC,EARW,OAScF,mBAAS,GATvB,mBASjBG,EATiB,KASJC,EATI,KAUlBC,EAPU,GAODF,EACTG,EAAYC,KAAKC,KAAKP,EAAKQ,OARjB,IAUhBC,qBAAU,WAAM,4CACd,8BAAAzC,EAAA,6DACQ0C,EAAa,CACnB/C,QAAS,CACP,cAAgB,SAAhB,OAA0BH,KAH9B,SAKoBS,IAAM0C,IAAN,iBAA4BD,GALhD,OAKQE,EALR,OAMEX,EAAQW,EAAIZ,MANd,4CADc,uBAAC,WAAD,wBASda,KAGC,CAACrD,IAEJ,IAAIsD,EAAmC,IAAhBd,EAAKQ,OAAgBR,EACzCe,MAAMX,EAAQA,EAzBD,IA0BbY,KAAK,SAAAC,GAAK,OACT,+BACE,6BACE,cAAC,IAAD,CAAM7B,GAAE,yBAAoB6B,EAAMC,IAAlC,SACGD,EAAME,eAGX,6BAAKF,EAAMnC,WACX,6BAAKmC,EAAMG,aACX,oBAAIC,QAAQ,IAAZ,SAAiBJ,EAAMK,WACvB,oBAAID,QAAQ,IAAZ,SAAiBJ,EAAMM,YAThBN,EAAMC,OAYf,6BACE,oBAAIG,QAAQ,IAAZ,0CAQN,OACE,eAAC,IAAMG,SAAP,WACE,oBAAI7C,UAAU,QAAd,oBACA,uBACEL,EACA,eAAC,IAAMkD,SAAP,WACE,qBAAK7C,UAAU,QAAf,SACE,eAAC8C,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAA7B,UACE,gCACE,+BACE,sCACA,sCACA,4CACA,oBAAIP,QAAQ,IAAZ,sBACA,oBAAIA,QAAQ,IAAZ,0BAGJ,gCACGP,SAIP,cAAC,IAAD,CACEe,UAAQ,EAACC,MAAO,WAChBC,UAAW,OACX1B,UAAWA,EACX2B,aA9Bc,SAACC,GACvB9B,EAAe8B,EAAEC,WA8BTC,mBAAoB,aACpBC,kBAAmB,kBACnBC,sBAAuB,mBACvBC,kBAAmB,mBACnBC,kBAAmB,6BACnBC,gBAAiB,gCAIrB,cAAC,EAAD,U,4CCxFRvE,IAAMwE,SAASC,QAAU,IAGlB,IASMC,EAAW,SAAAzB,GAAE,8CAAI,WAAOnD,EAAUR,GAAjB,eAAAS,EAAA,sEACVC,IAAM0C,IAAN,yBAA4BO,GAAM5D,EAAYC,IADpC,OACtBqD,EADsB,OAE5B7C,EAAS,CACPI,KAAMlB,EACN2F,QAAShC,EAAIZ,OAJa,2CAAJ,yDC+G1B,IAKepC,gBALS,SAACC,EAAOgF,GAAR,MAAsB,CAC5CpF,KAAMI,EAAMJ,KACZwD,MAAOpD,EAAMiF,OAAOD,EAASE,MAAMC,OAAO9B,OAK1C,CAAEyB,WAAUM,YDxFa,SAAA/B,GAAE,8CAAI,WAAOnD,EAAUR,GAAjB,SAAAS,EAAA,+EAEvBC,IAAMiF,OAAN,wBACahC,EADb,KAEJ5D,EAAYC,IAJe,OAM7BQ,EAAS,CACPI,KAAMhB,EACNyF,QAAS1B,IARkB,+CAW7BnD,EAAS,CACPI,KAAMd,IAZqB,gEAAJ,0DCsFdO,EAnIf,SAAsBQ,GAAQ,IAEpBC,EAASD,EAAMX,KAAfY,KACA6C,EAAOiC,cAAPjC,GACFkC,EAAUC,cACVC,EAAQC,cAed,OAbA9C,qBAAU,WACRrC,EAAMuE,SAASzB,KACd,CAACA,IAYF,cAAC,IAAMM,SAAP,UACIpD,EAAM6C,MACN,sBAAKtC,UAAU,SAAf,UACE,qBAAIA,UAAU,QAAd,UAAsB,4BAAIP,EAAM6C,MAAME,aAAtC,oBACA,uBACA,cAACqC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,oBAAI/E,UAAU,QAAd,uBAEF,eAAC+E,EAAA,EAAD,WACE,sCACA,+BAAOtF,EAAM6C,MAAMnC,cAErB,eAAC4E,EAAA,EAAD,WACE,yCACA,+BAAOtF,EAAM6C,MAAM0C,kBAErB,eAACD,EAAA,EAAD,WACE,0CACA,+BAAOtF,EAAM6C,MAAM2C,mBAErB,eAACF,EAAA,EAAD,WACE,+CACA,+BAAOtF,EAAM6C,MAAM4C,mBAErB,eAACH,EAAA,EAAD,WACE,uCACA,+BAAOtF,EAAM6C,MAAM6C,WAErB,cAACJ,EAAA,EAAD,UACE,yCAEAtF,EAAM6C,MAAM8C,QAAU3F,EAAM6C,MAAM8C,OAAO/C,KAAK,SAACgD,EAAOC,GACtD,OACE,cAACP,EAAA,EAAD,UACE,6BAAKM,KADGC,MAKd,uBACA,cAACP,EAAA,EAAD,UACE,oBAAI/E,UAAU,QAAd,uBAEF,cAAC+E,EAAA,EAAD,UACE,+BAAOtF,EAAM6C,MAAMM,YAErB,uBACA,cAACmC,EAAA,EAAD,UACE,oBAAI/E,UAAU,QAAd,oCAEF,eAAC+E,EAAA,EAAD,WACE,0CACA,+BAAOtF,EAAM6C,MAAMK,cAErB,eAACoC,EAAA,EAAD,WACE,wCACA,+BAAOtF,EAAM6C,MAAMK,SAASd,YAE9B,uBACA,cAACkD,EAAA,EAAD,UACE,oBAAI/E,UAAU,QAAd,yCAEF,eAAC+E,EAAA,EAAD,WACE,0CACA,+BAAOtF,EAAM6C,MAAMiD,cAErB,eAACR,EAAA,EAAD,WACE,4CACA,+BAAOtF,EAAM6C,MAAMG,gBAErB,eAACsC,EAAA,EAAD,WACE,iDACA,+BAAOtF,EAAM6C,MAAMkD,qBAErB,eAACT,EAAA,EAAD,WACE,gDACA,+BAAOtF,EAAM6C,MAAMmD,yBAIzB,uBACA,cAACV,EAAA,EAAD,UACGtF,EAAM6C,MAAMnC,WAAaT,EAAKS,SAC7B,eAAC,IAAM0C,SAAP,WACE,qBAAK7C,UAAU,iBAAf,SACE,cAAC0F,EAAA,EAAD,CAAQC,QAAQ,UAAUrF,KAAI,gBAAWiC,EAAX,KAA9B,oBAEF,qBAAKvC,UAAU,SAAf,SACE,cAAC0F,EAAA,EAAD,CAAQC,QAAQ,UAAUpF,QAnGtB,WAClB,IAAMiC,EAAa/C,EAAM6C,MAAME,WAC3BoD,OAAOC,QAAP,2CAAmDrD,EAAnD,SACF/C,EAAM6E,YAAY/B,GAClBoC,EAAMmB,KAAN,iBAAqBtD,EAArB,wBACAiC,EAAQsB,KAAK,aA8FD,yBAGH,UAML,U,kDCjHJC,GAAa,SAAC,GAIX,IAHLC,EAGI,EAHJA,MAAOC,EAGH,EAHGA,MAAOC,EAGV,EAHUA,KAGV,KAHgBC,MAGhB,EAHuB5G,aAGvB,WAH4B6G,EAG5B,MAFJvG,UAEI,WAFDuG,EAEC,MAFUC,YAEV,WAFeD,EAEf,MAF0BE,eAE1B,WAFkCF,EAElC,MADJG,KAAQC,EACJ,EADIA,QAASC,EACb,EADaA,MAAYC,EACzB,qFACJ,OACE,eAACC,GAAA,EAAKC,MAAN,CAAY/G,GAAIiF,IAAhB,UACE,cAAC6B,GAAA,EAAKzD,MAAN,CAAY2D,QAAM,EAACC,GAAI,EAAvB,SAA2Bb,IAC3B,eAACpB,EAAA,EAAD,CAAKiC,GAAI,EAAT,UACE,cAACC,GAAA,EAAD,yBACElH,GAAIA,EACJN,KAAMA,EACN8G,KAAMA,EACNF,MAAOH,EAAMG,MACba,SAAUhB,EAAMgB,UACZN,GANN,aAQGJ,GAAWA,EAAQlE,KAAK,SAAC6E,EAAQ5B,GAChC,OACE,iCAA8B4B,EAAO7B,OAAS6B,GAAjCA,EAAO3E,IAAM+C,SAI9Ba,EACA,cAACS,GAAA,EAAKO,KAAN,CAAWC,OAAK,EAAhB,SACGjB,IAEA,KACL,qBAAKnG,UAAS,UAAKyG,GAAWC,EAAQ,QAAU,IAAhD,SACGD,GAAWC,GACV,sBAAM1G,UAAU,UAAhB,SAA2B0G,aAQrCW,GAAY,SAAC5H,EAAD,GAAqB,EAAX6H,KAAY,IAE5BzI,EAAUY,EAAMX,KAAhBD,MACA0I,EAAwB9H,EAAxB8H,aAAcC,EAAU/H,EAAV+H,MAHa,EAIDpG,mBAAS,IAJR,mBAI5BqG,EAJ4B,KAIjBC,EAJiB,KAM7BjD,EAAUC,cAEhB5C,qBAAU,WAAM,4CACd,8BAAAzC,EAAA,6DACQ0C,EAAa,CACnB/C,QAAS,CACP,cAAgB,SAAhB,OAA0BH,KAH9B,SAKoBS,IAAM0C,IAAN,iBAA4BD,GALhD,OAKQE,EALR,OAOEyF,EAAazF,EAAIZ,MAPnB,4CADc,uBAAC,WAAD,wBAUdsG,KACC,CAAC9I,IAUJ,OACE,eAAC+H,GAAA,EAAD,CAAM5G,UAAU,MACd4H,SAAUL,GAVG,SAAAM,GACfpI,EAAMmI,SAASC,GACfpD,EAAQsB,KAAK,WAGbtB,EAAQqD,GAAG,MAMTC,QAASP,EAFX,UAIE,cAACQ,GAAA,EAAD,CACEC,KAAK,WACLzI,KAAK,OACL0I,UAAWlC,GACXE,MAAM,OACNiC,UAAQ,IAEV,cAACH,GAAA,EAAD,CACEC,KAAK,aACLzI,KAAK,OACL0I,UAAWlC,GACXE,MAAM,aACNC,KAAO,aAET,cAAC6B,GAAA,EAAD,CACEC,KAAK,WACLzI,KAAK,OACL0I,UAAWlC,GACXE,MAAM,aAER,cAAC8B,GAAA,EAAD,CACEC,KAAK,UACLnI,GAAG,WACHwG,KAAM,EACN4B,UAAWlC,GACXE,MAAM,YAER,cAAC8B,GAAA,EAAD,CACEC,KAAK,kBACLnI,GAAG,SACHyG,QA3DqB,CAAC,YAAa,QAAS,YAAa,eA4DzD2B,UAAWlC,GACXE,MAAM,kBACNkC,aAAc,cAEhB,cAACJ,GAAA,EAAD,CACEC,KAAK,iBACLzI,KAAK,OACL0I,UAAWlC,GACXE,MAAM,mBAER,cAAC8B,GAAA,EAAD,CACEC,KAAK,SACLnI,GAAG,SACHuI,UAAU,EACV9B,QAASkB,EACTS,UAAWlC,GACXE,MAAM,SACNE,MAAM,UAER,cAAC4B,GAAA,EAAD,CACEC,KAAK,aACLzI,KAAK,OACL0I,UAAWlC,GACXE,MAAM,eAER,cAAC8B,GAAA,EAAD,CACEC,KAAK,WACLzI,KAAK,OACL0I,UAAWlC,GACXE,MAAM,aAER,cAAC8B,GAAA,EAAD,CACEC,KAAK,UACLzI,KAAK,OACL0I,UAAWlC,GACXE,MAAM,YAER,cAAC8B,GAAA,EAAD,CACEC,KAAK,gBACLzI,KAAK,OACL0I,UAAWlC,GACXE,MAAM,kBAER,cAAC8B,GAAA,EAAD,CACEC,KAAK,QACLzI,KAAK,OACL0I,UAAWlC,GACXE,MAAM,UAER,uBACA,eAACnB,EAAA,EAAD,WACE,qBAAK/E,UAAU,SAAf,SACE,cAAC0F,EAAA,EAAD,CAAQC,QAAQ,UAAUnG,KAAK,SAA/B,sBAKF,qBAAKQ,UAAU,SAAf,SACE,cAAC0F,EAAA,EAAD,CAAQC,QAAQ,UACdpF,QAAS,kBAAMkE,EAAQ6D,UADzB,6BAyBVjB,GAAYpI,aAJY,SAAAC,GAAK,MAAK,CAChCJ,KAAMI,EAAMJ,QAGFG,CAEVoI,IAEakB,oBAAU,CACvBC,KAAM,cACNC,SAlBe,SAAAC,GACb,IAAMC,EAAS,GAIf,OAHKD,EAAOlG,aACVmG,EAAOnG,WAAa,8BAEfmG,GAcTC,aAAa,EACbC,oBAAoB,GAJPN,CAMZlB,ICjKH,ICyCkByB,GAKAC,GDzCH9J,gBALS,SAACC,EAAOgF,GAAR,MAAsB,CAC5C5B,MAAOpD,EAAMiF,OAAOD,EAASE,MAAMC,OAAO9B,IAC1CzD,KAAMI,EAAMJ,QAKZ,CAAEkF,WAAUgF,SHxBU,SAAAnB,GAAU,8CAAI,WAAOzI,EAAUR,GAAjB,eAAAS,EAAA,+EAEhBC,IAAMC,KACtB,iBADgB,eAEXsI,GACLlJ,EAAYC,IALoB,OAE5BqD,EAF4B,OAOlC7C,EAAS,CACPI,KAAMjB,EACN0F,QAAShC,EAAIZ,OAEfjC,EAASoI,YAAM,gBAXmB,gDAalCpI,EAAS,CACPI,KAAMd,IAERU,EAAS6J,YAAW,cAAe,KAAIC,SAAS7H,OAhBd,iEAAJ,yDGwBV8H,UHeC,SAAC5G,EAAIsF,GAAL,8CAAoB,WAAOzI,EAAUR,GAAjB,eAAAS,EAAA,+EAEvBC,IAAM8J,MAAN,wBACC7G,EADD,KAEhBsF,EACAlJ,EAAYC,IAL2B,OAEnCqD,EAFmC,OAOzC7C,EAAS,CACPI,KAAMf,EACNwF,QAAShC,EAAIZ,OAEfjC,EAASoI,YAAM,gBAX0B,gDAazCpI,EAAS,CACPI,KAAMd,IAERU,EAAS6J,YAAW,cAAe,KAAIC,SAAS7H,OAhBP,iEAApB,0DGjBVpC,EAhDf,SAAsBQ,GAAQ,IAAD,EAEH2B,wBAASiF,GAFN,mBAEpBiB,EAFoB,KAEd+B,EAFc,OAGHjI,mBAAS,IAHN,mBAGpB1B,EAHoB,KAGd4J,EAHc,KAInB/G,EAAOiC,cAAPjC,GACFgH,GAAahH,EAmBnB,OAbAT,qBAAU,WAEHyH,EAKHF,EAAQ,QAJR5J,EAAMuE,SAASzB,GAEf8G,EAAQ,SAIVC,EAAQ7J,EAAMX,KAAKY,KAAKS,YACvB,CAACoC,EAAIgH,EAAW9J,EAAMX,KAAKY,KAAKS,WAIjC,eAAC,IAAM0C,SAAP,WACE,qBAAI7C,UAAU,QAAd,UAAuBsH,EAAvB,YACA,uBACE5H,EACA,cAAC,GAAD,CACEkI,SAvBS,SAAAC,GACf0B,EAAY9J,EAAMuJ,SAASnB,GAAcpI,EAAM0J,UAAU5G,EAAIsF,IAuBvD2B,cAAa,aACX,SAAY9J,GACTD,EAAM6C,SAGX,KAEJ,6BC/BA0D,GAAa,SAAC,GAAmE,IAAjEC,EAAgE,EAAhEA,MAAOC,EAAyD,EAAzDA,MAAO1G,EAAkD,EAAlDA,KAAMiK,EAA4C,EAA5CA,YAA4C,IAA/BjD,KAAQC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,MACpE,OACE,eAACE,GAAA,EAAKC,MAAN,CAAY/G,GAAIiF,IAAhB,UACE,cAAC6B,GAAA,EAAKzD,MAAN,CAAY2D,QAAM,EAACC,GAAI,EAAvB,SAA2Bb,IAC3B,eAACpB,EAAA,EAAD,CAAKiC,GAAI,EAAT,UACE,cAACC,GAAA,EAAD,CACExH,KAAMA,EACNiK,YAAaA,EACbrD,MAAOH,EAAMG,MACba,SAAUhB,EAAMgB,WAElB,qBAAKjH,UAAS,UAAKyG,GAAWC,EAAQ,QAAU,IAAhD,SACGD,GAAWC,GACV,sBAAM1G,UAAU,UAAhB,SAA2B0G,aAQrCgD,GAAe,SAAAjK,GAMjB,OAAIA,EAAME,gBACD,cAAC,IAAD,CAAUc,GAAG,MAIpB,eAACmG,GAAA,EAAD,CAAM5G,UAAU,MAAM4H,SAAUnI,EAAM8H,cATvB,SAAAM,GACfpI,EAAMkK,SAAS9B,MAQf,UACE,cAACG,GAAA,EAAD,CACEC,KAAK,WACLzI,KAAK,OACL0I,UAAWlC,GACXyD,YAAY,WACZvD,MAAM,WACNuC,SAAU,CAACmB,GAAUC,GAAYC,MAEnC,cAAC9B,GAAA,EAAD,CACEC,KAAK,QACLzI,KAAK,QACL0I,UAAWlC,GACXyD,YAAY,oBACZvD,MAAM,QACNuC,SAAUmB,KAEZ,cAAC5B,GAAA,EAAD,CACEC,KAAK,WACLzI,KAAK,WACL0I,UAAWlC,GACXyD,YAAY,WACZvD,MAAM,WACNuC,SAAUmB,KAEZ,cAAC5B,GAAA,EAAD,CACEC,KAAK,YACLzI,KAAK,WACL0I,UAAWlC,GACXyD,YAAY,WACZvD,MAAM,mBACNuC,SAAU,CAACmB,GAAUG,MAEvB,8BACE,cAACrE,EAAA,EAAD,CAAQC,QAAQ,UAAUnG,KAAK,SAA/B,wBAEF,eAACoH,GAAA,EAAKO,KAAN,CAAWnH,UAAU,UAArB,sCAC2B,cAAC,IAAD,CAAMS,GAAG,SAAT,0BAM3BmJ,GAAW,SAAAxD,GAAK,OAAKA,OAAQC,EAAY,YAYzCwD,IAVYf,GAUW,EAVJ,SAAA1C,GAAK,OAC9BA,GAASA,EAAMvE,OAASiH,GAAxB,2BACwBA,GADxB,oBAEIzC,IAQEyD,IANYf,GAMY,GANL,SAAA3C,GAAK,OAC9BA,GAASA,EAAMvE,OAASkH,GAAxB,kBACeA,GADf,4BAEI1C,IAKE0D,GAAgB,SAAC3D,EAAO4D,GAAR,OACpB5D,IAAU4D,EAAUC,SAAW,8BAA2B5D,GAM5DqD,GAAezK,aAJS,SAAAC,GAAK,MAAK,CAChCS,gBAAiBT,EAAMJ,KAAKa,mBAK5B,CAAEgK,SV1BoB,SAAC,GAAD,IAAGxJ,EAAH,EAAGA,SAAU+J,EAAb,EAAaA,MAAOD,EAApB,EAAoBA,SAApB,8CAAmC,WAAM7K,GAAN,mBAAAC,EAAA,6DAEnDN,EAAS,CACbC,QAAS,CACP,eAAgB,qBAKdmL,EAAOC,KAAKC,UAAU,CAAElK,WAAU+J,QAAOD,aATU,kBAWrC3K,IAAMC,KAAK,qBAAsB4K,EAAMpL,GAXF,OAWjDkD,EAXiD,OAYvD7C,EAAS,CACTI,KAAMxB,EACNiG,QAAShC,EAAIZ,OAd0C,gDAiBvDjC,EAAS,CACPI,KAAMvB,IAERmB,EAAS6J,YAAW,eAAgB,KAAIC,SAAS7H,OApBM,yDAAnC,wDUwBTpC,CAGbyK,IAEanB,oBAAU,CACvBC,KAAM,gBADOD,CAEZmB,ICxGG1D,GAAa,SAAC,GAAmE,IAAjEC,EAAgE,EAAhEA,MAAOC,EAAyD,EAAzDA,MAAO1G,EAAkD,EAAlDA,KAAMiK,EAA4C,EAA5CA,YAA4C,IAA/BjD,KAAQC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,MACpE,OACE,eAACE,GAAA,EAAKC,MAAN,CAAY/G,GAAIiF,IAAhB,UACE,cAAC6B,GAAA,EAAKzD,MAAN,CAAY2D,QAAM,EAACC,GAAI,EAAvB,SAA2Bb,IAC3B,eAACpB,EAAA,EAAD,CAAKiC,GAAI,EAAT,UACE,cAACC,GAAA,EAAD,CACExH,KAAMA,EACNiK,YAAaA,EACbrD,MAAOH,EAAMG,MACba,SAAUhB,EAAMgB,WAElB,qBAAKjH,UAAS,UAAKyG,GAAWC,EAAQ,QAAU,IAAhD,SACGD,GAAWC,GACV,sBAAM1G,UAAU,UAAhB,SAA2B0G,aAQrC4D,GAAY,SAAA7K,GAed,OAAIA,EAAME,gBACD,cAAC,IAAD,CAAUc,GAAG,MAIpB,eAACmG,GAAA,EAAD,CAAM5G,UAAU,MAAM4H,SAAUnI,EAAM8H,cATvB,SAAAM,GACfpI,EAAM8K,MAAM1C,MAQZ,UACE,cAACG,GAAA,EAAD,CACEC,KAAK,WACLzI,KAAK,OACL0I,UAAWlC,GACXE,MAAM,WACNuD,YAAY,aAEd,cAACzB,GAAA,EAAD,CACEC,KAAK,WACLzI,KAAK,WACL0I,UAAWlC,GACXE,MAAM,WACNuD,YAAY,aAEd,8BACE,cAACzB,GAAA,EAAD,CACEC,KAAK,mBACLzI,KAAK,SACL0I,UArCY,SAAC,GAA+B,IAA7B1I,EAA4B,EAA5BA,KAAckH,EAAc,EAAtBF,KAAQE,MACnC,OACE,sBAAK1G,UAAU,QAAf,UACE,uBAAOR,KAAMA,IACZkH,GAAS,qBAAK1G,UAAU,QAAf,SAAwB0G,YAoCpC,8BACE,cAAChB,EAAA,EAAD,CAAQC,QAAQ,UAAUnG,KAAK,SAA/B,qBAEF,eAACoH,GAAA,EAAKO,KAAN,CAAWnH,UAAU,UAArB,oCACyB,cAAC,IAAD,CAAMS,GAAG,YAAT,iCAW/B6J,GAAYrL,aAJY,SAAAC,GAAK,MAAK,CAChCS,gBAAiBT,EAAMJ,KAAKa,mBAK5B,CAAE4K,MX5DiB,SAAC,GAAD,IAAGpK,EAAH,EAAGA,SAAU8J,EAAb,EAAaA,SAAb,8CAA4B,WAAM7K,GAAN,mBAAAC,EAAA,6DAEzCN,EAAS,CACbC,QAAS,CACP,eAAgB,qBAKdmL,EAAOC,KAAKC,UAAW,CAAClK,WAAU8J,aATO,kBAY3B3K,IAAMC,KAAK,iBAAkB4K,EAAMpL,GAZR,OAYvCkD,EAZuC,OAa7C7C,EAAS,CACPI,KAAMtB,EACN+F,QAAShC,EAAIZ,OAf8B,gDAkB7CjC,EAAS,CACPI,KAAMrB,IAERiB,EAAS6J,YAAW,YAAa,KAAIC,SAAS7H,OArBD,yDAA5B,wDW0DTpC,CAGVqL,IAEa/B,oBAAU,CACvBC,KAAM,aADOD,CAEZ+B,I,sCCtFGE,GAAe,CACnBC,WAAW,EACX9K,gBAAiB,KACjBD,KAAM,GACNb,MAAO6L,aAAaC,QAAQ,SAC5BjE,MAAO,M,4CCXHkE,GAAaC,2BAAgB,CAC/BrC,KAAMsC,KACN3G,OCHW,WAAyB,IAAxBjF,EAAuB,uDAAf,GAAI6L,EAAW,uCACrC,OAAQA,EAAOvL,MACb,KAAKnB,EACH,OAAO,2BACFa,GACA8L,KAAEC,QAAQF,EAAO9G,QAAS,OAEjC,KAAK3F,EACL,KAAKC,EACL,KAAKE,EACH,OAAO,2BACFS,GADL,mBAEG6L,EAAO9G,QAAQ1B,GAAKwI,EAAO9G,UAEhC,KAAKzF,EACH,OAAOwM,KAAEE,KAAKhM,EAAO6L,EAAO9G,SAC9B,KAAKvF,EACH,OAAO,2BACFQ,GADL,IAEEwH,OAAO,IAEX,QACE,OAAOxH,IDlBTJ,KDWW,WAAgD,IAA/BI,EAA8B,uDAAtBsL,GAAcO,EAAQ,uCAC5D,OAAQA,EAAOvL,MACb,KAAK3B,EACH,OAAO,2BACFqB,GADL,IAEEuL,WAAW,IAEf,KAAK3M,EACH,OAAO,2BACFoB,GADL,IAEEuL,WAAW,EACX9K,iBAAiB,EACjBD,KAAMqL,EAAO9G,UAEjB,KAAKjG,EACL,KAAKE,EAGH,OADAwM,aAAaS,QAAQ,QAASJ,EAAO9G,QAAQpF,OACtC,2BACFK,GADL,IAEEuL,WAAW,EACX9K,iBAAiB,GACdoL,EAAO9G,SAEd,KAAKlG,EACL,KAAKE,EACL,KAAKE,EACL,KAAKC,EAEH,OADAsM,aAAaU,WAAW,SACjB,2BACFlM,GADL,IAEEuL,WAAW,EACX9K,iBAAiB,EACjBD,KAAM,KACNb,MAAO,KACP6H,OAAO,IAEX,QACE,OAAOxH,MCvCEmM,GAPK,SAACnM,EAAO6L,GAIxB,OAHIA,EAAOvL,OAASpB,IAChBc,OAAQmH,GAELuE,GAAW1L,EAAO6L,IEPdO,GALDC,uBACVF,GACAG,+BAAoBC,2BAAgBC,QC6CzBC,OAnCf,SAAalM,GAMX,OAJAqC,qBAAU,WACRwJ,GAAMlM,ShBHc,uCAAM,WAAOA,EAAUR,GAAjB,eAAAS,EAAA,6DAC5BD,EAAS,CAAEI,KAAM3B,IADW,kBAIRyB,IAAM0C,IAAI,iBAAkBrD,EAAYC,IAJhC,OAIpBqD,EAJoB,OAK1B7C,EAAS,CACPI,KAAM1B,EACNmG,QAAShC,EAAIZ,OAPW,gDAU1BjC,EAAS,CACPI,KAAMzB,IAXkB,yDAAN,2DgBInB,IAGD,cAAC,IAAD,CAAUuN,MAAOA,GAAjB,SACE,sBAAKtL,UAAU,MAAf,UACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,8CAAKA,UAAU,QAAWP,GAA1B,cACE,cAAC,EAAD,IACA,qBAAKO,UAAU,YAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO4L,OAAK,EAACC,KAAK,IAAI3D,UAAWhH,IACjC,cAAC,IAAD,CAAO2K,KAAK,YAAYD,OAAK,EAAC1D,UAAWwB,KACzC,cAAC,IAAD,CAAOmC,KAAK,SAASD,OAAK,EAAC1D,UAAWoC,KACtC,cAAC,IAAD,CAAOuB,KAAK,UAAUD,OAAK,EAAC1D,UAAW4D,IACvC,cAAC,IAAD,CAAOD,KAAK,qBAAqB3D,UAAW6D,KAC5C,cAAC,IAAD,CAAOF,KAAK,OAAO3D,UAAW8D,KAC9B,cAAC,IAAD,CAAOH,KAAK,aAAa3D,UAAW8D,KACpC,cAAC,IAAD,CAAOH,KAAK,aAAa3D,UAAW8D,iBAK5C,qBAAKhM,UAAU,SAAf,SACE,sFClCKiM,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,UCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAeC,SAAUC,KAAzB,SACE,cAAC,GAAD,QAGJC,SAASC,eAAe,SAM1Bf,M","file":"static/js/main.5fec1aed.chunk.js","sourcesContent":["// authentication\nexport const USER_LOADING = 'USER_LOADING';\nexport const USER_LOADED = 'USER_LOADED';\nexport const AUTH_ERROR = 'AUTH_ERROR';\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\n\n// oligos\nexport const GET_OLIGOS = 'GET_OLIGOS';\nexport const GET_OLIGO = 'GET_OLIGO';\nexport const ADD_OLIGO = 'ADD_OLIGO';\nexport const DELETE_OLIGO = 'DELETE_OLIGO';\nexport const EDIT_OLIGO = 'EDIT_OLIGO';\nexport const BAD_REQUEST = 'BAD_REQUEST';","//adapted from https://medium.com/technest/implement-user-auth-in-a-django-react-app-with-knox-fc56cdc9211c\n\nimport axios from 'axios';\nimport { stopSubmit } from 'redux-form';\n\nimport {\n  USER_LOADED,\n  USER_LOADING,\n  AUTH_ERROR,\n  LOGIN_FAIL,\n  LOGIN_SUCCESS,\n  LOGOUT_SUCCESS,\n  REGISTER_FAIL,\n  REGISTER_SUCCESS\n} from './types';\n\n\n// load user\nexport const loadUser = () => async (dispatch, getState) => {\n  dispatch({ type: USER_LOADING });\n\n  try {\n    const res = await axios.get('/api/auth/user', tokenConfig(getState));\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: AUTH_ERROR\n    });\n  }\n};\n\n// login user\nexport const login = ({ username, password }) => async dispatch => {\n  // Headers\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  // Request body\n  const body = JSON.stringify( {username, password } );\n\n  try {\n    const res = await axios.post('api/auth/login', body, config);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: LOGIN_FAIL\n    });\n    dispatch(stopSubmit('loginForm', err.response.data));\n  }\n};\n\n// helper function\nexport const tokenConfig = getState => {\n  // get token\n  const token = getState().auth.token;\n\n  // headers\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  if (token) {\n    config.headers['Authorization'] = `Token ${token}`;\n  }\n\n  return config;\n}\n\n// logout user\nexport const logout = () => async (dispatch, getState) => {\n  await axios.post('/api/auth/logout', null, tokenConfig(getState));\n  dispatch({\n    type: LOGOUT_SUCCESS\n  });\n};\n\n// register user\nexport const register = ({ username, email, password }) => async dispatch => {\n  //Headers\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  //request body\n  const body = JSON.stringify({ username, email, password });\n  try {\n    const res = await axios.post('/api/auth/register', body, config);\n    dispatch({\n    type: REGISTER_SUCCESS,\n    payload: res.data\n  });\n  } catch (err) {\n    dispatch({\n      type: REGISTER_FAIL\n    });\n    dispatch(stopSubmit('registerForm', err.response.data))\n  }\n }","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport {\n  NavLink,\n  NavItem,\n  Dropdown\n} from 'react-bootstrap';\n\nimport { logout } from '../actions/auth';\nimport './Navbar.css';\n\n\nfunction Header(props) {\n\n  const { user, isAuthenticated } = props.auth;\n\n  const userLinks = (\n    <Dropdown as={NavItem} className='top'>\n      <Dropdown.Toggle as={NavLink} className='dropdown top'>\n        <span>{user ? user.username : ''}</span>\n      </Dropdown.Toggle>\n      <Dropdown.Menu className='dropdown-items top'>\n        <Dropdown.Item href='/'>\n          <div onClick={props.logout}>Logout</div>\n        </Dropdown.Item>\n      </Dropdown.Menu>\n    </Dropdown>\n  );\n\n  const guestLinks = (\n    <nav className='top-menu'>\n      <ul className='top-menu-items'>\n        <li className='top-menu-text'>\n          <Link to='/register'>\n            <span>Sign up</span>\n          </Link>\n        </li>\n        <span className=\"vertical-line\" />\n        <li className='top-menu-text'>\n          <Link to='/login'>\n            <span>Login</span>\n          </Link>\n        </li>\n      </ul>\n    </nav>\n  );\n\n  return (\n    <div className='header'>\n      <div className='app-header'>\n        <div className='logo'>\n          <img\n            className='logo-img'\n            src={process.env.PUBLIC_URL + '/receptor_logo.gif'}\n            alt='Receptor application for storing oligos'\n          />\n        </div>\n        <div className='auth'>\n          { isAuthenticated ? userLinks : guestLinks }\n        </div>\n      </div>\n    </div>\n  )\n}\n\n// export default Header;\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(\n  mapStateToProps,\n  { logout }\n)(Header);","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport * as FaIcons from 'react-icons/fa';\nimport * as AiIcons from 'react-icons/ai';\nimport {\n  Nav,\n  NavItem,\n  NavLink,\n  Dropdown\n} from 'react-bootstrap';\n\nimport './Navbar.css';\n\n\nfunction NavbarMenu() {\n  return (\n    <Nav className='flex-column nav-menu'>\n      <Nav.Item>\n        <Nav.Link href='/'>\n          <span><AiIcons.AiFillHome /></span>\n          <span>Home</span>\n        </Nav.Link>\n      </Nav.Item>\n      <Dropdown as={NavItem}>\n        <Dropdown.Toggle as={NavLink} className='dropdown'>\n          <span><FaIcons.FaDatabase /></span>\n          <span>Oligos</span>\n        </Dropdown.Toggle>\n        <Dropdown.Menu className='dropdown-items'>\n          <Link to='/oligos'>View list</Link>\n          <Link to='/add'>Add new oligo</Link>\n          <Dropdown.Divider />\n          <Link to='#' class='disabled'>Batch submission</Link>\n          <Link to='#' class='disabled'>Sequence search</Link>\n        </Dropdown.Menu>\n      </Dropdown>\n    </Nav>\n  )\n}\n\nexport default NavbarMenu;","import React from 'react';\n\nfunction Home() {\n  return (\n    <div>\n      <h2 className='title'>Welcome to your Lab Receptor!</h2>\n      <br />\n      <p>\n        Receptor is a web-based application for managing lab data. Modules, or apps, are accessed via the sidebar on the left. Login information is shown in the upper-right corner of the page.\n      </p>\n      <br />\n      <p>\n        For more information, please contact you department adminstrator.\n      </p>\n    </div>\n  )\n}\n\nexport default Home;","import React from 'react';\n\n\nfunction UnAuthorized() {\n  return (\n    <p>\n      You need to be logged in to view this page. Please create an account if you are not already registered.\n    </p>\n  )\n}\n\nexport default UnAuthorized;","// inspired from: https://ihsavru.medium.com/react-paginate-implementing-pagination-in-react-f199625a5c8e\n\nimport React, { useEffect, useState } from 'react';\nimport { Table } from 'react-bootstrap';\nimport axios from 'axios';\nimport ReactPaginate from 'react-paginate';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\n// import { getOligos } from '../../actions/oligos';\nimport './Oligos.css';\nimport UnAuthorized from '../UnAuthorized';\n\n\nfunction OligoList(props) {\n\n  //Holds the number of items to be displayed per page\n  const PER_PAGE= 10;\n\n  const { isAuthenticated } = props.auth;\n  const token = props.auth.token;\n\n  const [data, setData] = useState([]);\n  const [currentPage, setCurrentPage] = useState(0);\n  const offset = currentPage * PER_PAGE;\n  const pageCount = Math.ceil(data.length / PER_PAGE);\n\n  useEffect(() => {\n    async function getData() {\n      const auth_token = {\n      headers: {\n        'Authorization': `Token ${token}`\n      }};\n      const res = await axios.get(`/oligos/oligos`, auth_token);\n      setData(res.data);\n    }\n    getData();\n    // props.getOligos();\n    // setData(props.oligos);\n  }, [token]);\n\n  let currentPageData = (data.length !== 0) ? data\n    .slice(offset, offset + PER_PAGE)\n    .map( oligo =>\n      <tr key={oligo.id}>\n        <td>\n          <Link to={`/oligo_details/${oligo.id}`}>\n            {oligo.oligo_name}\n          </Link>\n        </td>\n        <td>{oligo.username}</td>\n        <td>{oligo.gene_locus}</td>\n        <td colSpan='2'>{oligo.sequence}</td>\n        <td colSpan='2'>{oligo.details}</td>\n      </tr>\n    ) : (\n      <tr>\n        <td colSpan='7'>No oligos in the database.</td>\n      </tr>\n    );\n\n  const handlePageClick = (e) => {\n    setCurrentPage(e.selected);\n  }\n\n  return (\n    <React.Fragment>\n      <h2 className='title'>Oligos</h2>\n      <br />\n      { isAuthenticated ? (\n        <React.Fragment>\n          <div className='table'>\n            <Table striped bordered hover>\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>User</th>\n                  <th>Gene Locus</th>\n                  <th colSpan='2'>Sequence</th>\n                  <th colSpan='2'>Details</th>\n                </tr>\n              </thead>\n              <tbody>\n                {currentPageData}\n              </tbody>\n            </Table>\n          </div>\n          <ReactPaginate\n            previous Label={'Previous'}\n            nextLabel={'Next'}\n            pageCount={pageCount}\n            onPageChange={handlePageClick}\n            containerClassName={'pagination'}\n            pageLinkClassName={'pagination-page'}\n            previousLinkClassName={'pagination__link'}\n            nextLinkClassName={'pagination__link'}\n            disabledClassName={'pagination__link--disabled'}\n            activeClassName={'pagination__link--active'}\n          />\n        </React.Fragment>\n      ) : (\n        <UnAuthorized />\n      )}\n    </React.Fragment>\n  )\n}\n\n// export default OligoList;\n\nconst mapStateToProps = state => ({\n  // oligos: Object.values(state.oligos),\n  auth: state.auth\n});\n\nexport default connect(\n  mapStateToProps,\n  // { getOligos }\n)(OligoList);\n","import axios from 'axios';\nimport { tokenConfig } from './auth';\nimport { reset, stopSubmit } from 'redux-form';\n\nimport {\n  GET_OLIGOS,\n  GET_OLIGO,\n  ADD_OLIGO,\n  DELETE_OLIGO,\n  EDIT_OLIGO,\n  BAD_REQUEST\n} from './types';\n\naxios.defaults.baseURL = '/';\n\n// get oligos\nexport const getOligos = () => async (dispatch, getState) => {\n  const res = await axios.get('/oligos/oligos/', tokenConfig(getState));\n  dispatch({\n    type: GET_OLIGOS,\n    payload: res.data\n  });\n};\n\n// get oligo\nexport const getOligo = id => async (dispatch, getState) => {\n  const res = await axios.get(`/oligos/oligos/${id}`, tokenConfig(getState));\n  dispatch({\n    type: GET_OLIGO,\n    payload: res.data\n  });\n};\n\n// add oligo\nexport const addOligo = formValues => async (dispatch, getState) => {\n  try {\n    const res = await axios.post(\n      'oligos/oligos/',\n      { ...formValues },\n      tokenConfig(getState)\n    );\n    dispatch({\n      type: ADD_OLIGO,\n      payload: res.data\n    });\n    dispatch(reset('createOligo'));\n  } catch (err) {\n    dispatch({\n      type: BAD_REQUEST\n    });\n    dispatch(stopSubmit('createOligo', err.response.data));\n  };\n};\n\n// delete oligo\nexport const deleteOligo = id => async (dispatch, getState) => {\n  try {\n    await axios.delete(\n      `oligos/oligos/${id}/`,\n      tokenConfig(getState)\n    );\n    dispatch({\n      type: DELETE_OLIGO,\n      payload: id\n    });\n  } catch (err) {\n    dispatch({\n      type: BAD_REQUEST\n    });\n  };\n};\n\n// edit oligo\nexport const editOligo = (id, formValues) => async (dispatch, getState) => {\n  try {\n    const res = await axios.patch(\n      `oligos/oligos/${id}/`,\n      formValues,\n      tokenConfig(getState),\n    );\n    dispatch({\n      type: EDIT_OLIGO,\n      payload: res.data\n    });\n    dispatch(reset('createOligo'));\n  } catch (err) {\n    dispatch({\n      type: BAD_REQUEST\n    });\n    dispatch(stopSubmit('createOligo', err.response.data));\n  };\n};\n\n","import React, { useEffect } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Container, Col, Row, Button } from 'react-bootstrap';\nimport { useAlert } from 'react-alert';\n\nimport './Oligos.css';\nimport { getOligo, deleteOligo } from '../../actions/oligos';\n\n\nfunction OligoDetails(props) {\n\n  const { user } = props.auth;\n  const { id } = useParams();\n  const history = useHistory();\n  const alert = useAlert();\n\n  useEffect(() => {\n    props.getOligo(id);\n  }, [id]);\n\n  const deleteOligo = () => {\n    const oligo_name = props.oligo.oligo_name;\n    if (window.confirm(`Are you sure you want to delete '${oligo_name}'?`)) {\n      props.deleteOligo(id);\n      alert.show(`Oligo '${oligo_name}' has been deleted!`);\n      history.push('/oligos');\n    };\n  };\n\n  return (\n    <React.Fragment>\n      { props.oligo ? (\n        <div className='detail'>\n          <h2 className='title'><b>{props.oligo.oligo_name}</b> Oligo Details</h2>\n          <br />\n          <Container>\n            <Col>\n              <Row>\n                <h4 className='title'>General</h4>\n              </Row>\n              <Row>\n                <b>User:</b>\n                <span>{props.oligo.username}</span>\n              </Row>\n              <Row>\n                <b>Created:</b>\n                <span>{props.oligo.created_date}</span>\n              </Row>\n              <Row>\n                <b>Modified:</b>\n                <span>{props.oligo.modified_date}</span>\n              </Row>\n              <Row>\n                <b>Concentration:</b>\n                <span>{props.oligo.concentration}</span>\n              </Row>\n              <Row>\n                <b>Grade:</b>\n                <span>{props.oligo.grade}</span>\n              </Row>\n              <Row>\n                <b>Usage:</b>\n              </Row>\n              { props.oligo.usages && props.oligo.usages.map( (usage, i) => {\n                return (\n                  <Row key={i}>\n                    <li>{usage}</li>\n                  </Row>\n                )\n              })}\n              <br />\n              <Row>\n                <h4 className='title'>Details</h4>\n              </Row>\n              <Row>\n                <span>{props.oligo.details}</span>\n              </Row>\n              <br />\n              <Row>\n                <h4 className='title'>Sequence Information</h4>\n              </Row>\n              <Row>\n                <b>Sequence:</b>\n                <span>{props.oligo.sequence}</span>\n              </Row>\n              <Row>\n                <b>Length:</b>\n                <span>{props.oligo.sequence.length}</span>\n              </Row>\n              <br />\n              <Row>\n                <h4 className='title'>Hybridization Information</h4>\n              </Row>\n              <Row>\n                <b>Organism:</b>\n                <span>{props.oligo.organism}</span>\n              </Row>\n              <Row>\n                <b>Gene Locus:</b>\n                <span>{props.oligo.gene_locus}</span>\n              </Row>\n              <Row>\n                <b>Primer Position:</b>\n                <span>{props.oligo.primer_position}</span>\n              </Row>\n              <Row>\n                <b>Primer Partner:</b>\n                <span>{props.oligo.primer_partner}</span>\n              </Row>\n            </Col>\n          </Container>\n          <br />\n          <Row>\n            {props.oligo.username === user.username ? (\n              <React.Fragment>\n                <div className='button loffset'>\n                  <Button variant='primary' href={`/edit/${id}/`}>Edit</Button>\n                </div>\n                <div className='button'>\n                  <Button variant='primary' onClick={deleteOligo}>Delete</Button>\n                </div>\n              </React.Fragment>\n            ):(null)}\n            {/* <div className='button'>\n              <Button variant='primary' href={`/copy/${id}/`}>Copy to New Oligo</Button>\n            </div> */}\n          </Row>\n        </div>\n      ) : null }\n    </React.Fragment>\n  )\n}\n\n// export default OligoDetails;\n\nconst mapStateToProps = (state, ownProps) => ({\n  auth: state.auth,\n  oligo: state.oligos[ownProps.match.params.id],\n});\n\nexport default connect(\n  mapStateToProps,\n  { getOligo, deleteOligo }\n)(OligoDetails);","import React, { useState, useEffect } from 'react';\nimport { Link, Redirect , useHistory } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport axios from 'axios';\nimport {\n  FormControl,\n  Form,\n  Button,\n  Row,\n  Col\n} from 'react-bootstrap';\n\nimport './Oligos.css';\n\n\nconst fieldInput = ({\n    input, label, text, value, type=undefined,\n    as=undefined, rows=undefined, options=undefined,\n    meta: { touched, error }, ...fieldAttrs\n  }) => {\n    return (\n      <Form.Group as={Row}>\n        <Form.Label column sm={4}>{label}</Form.Label>\n        <Col sm={8}>\n          <FormControl\n            as={as}\n            type={type}\n            rows={rows}\n            value={input.value}\n            onChange={input.onChange}\n            {...fieldAttrs}\n          >\n            {options && options.map( (option, i) => {\n              return (\n                <option key={option.id || i}>{option.usage || option}</option>\n              )\n            })}\n          </FormControl>\n          { text ? (\n            <Form.Text muted>\n              {text}\n            </Form.Text>\n          ) : (null)}\n          <div className={`${touched && error ? 'error' : ''}`}>\n            {touched && error && (\n              <span className='red-lbl'>{error}</span>\n            )}\n          </div>\n        </Col>\n      </Form.Group>\n    )\n  };\n\nlet OligoForm = (props, { mode }) => {\n\n  const { token } = props.auth;\n  const { handleSubmit, reset } = props;\n  const [usageData, setUsageData] = useState([]);\n  const primerPositionData = ['Choose...', 'Sense', 'Antisense', 'Unspecified'];\n  const history = useHistory();\n\n  useEffect(() => {\n    async function getOptionsData() {\n      const auth_token = {\n      headers: {\n        'Authorization': `Token ${token}`\n      }};\n      const res = await axios.get(`/oligos/usages`, auth_token);\n      // setUsageData(res.data.map(({ usage }) => usage));\n      setUsageData(res.data);\n    }\n    getOptionsData();\n  }, [token])\n\n  const onSubmit = formValues => {\n    props.onSubmit(formValues);\n    history.push('/oligos');\n\n    // refresh /oligos\n    history.go(0);\n  };\n\n  return (\n    <Form className='frm'\n      onSubmit={handleSubmit(onSubmit)}\n      onReset={reset}\n    >\n      <Field\n        name='username'\n        type='text'\n        component={fieldInput}\n        label='User'\n        readOnly\n      />\n      <Field\n        name='oligo_name'\n        type='text'\n        component={fieldInput}\n        label='Oligo Name'\n        text = 'Required'\n      />\n      <Field\n        name='sequence'\n        type='text'\n        component={fieldInput}\n        label='Sequence'\n      />\n      <Field\n        name='details'\n        as='textarea'\n        rows={3}\n        component={fieldInput}\n        label='Details'\n      />\n      <Field\n        name='primer_position'\n        as='select'\n        options={primerPositionData}\n        component={fieldInput}\n        label='Primer Position'\n        defaultValue={'Choose...'}\n      />\n      <Field\n        name='primer_partner'\n        type='text'\n        component={fieldInput}\n        label='Primer Partner'\n      />\n      <Field\n        name='usages'\n        as='select'\n        multiple={true}\n        options={usageData}\n        component={fieldInput}\n        label='Usages'\n        value='Other'\n      />\n      <Field\n        name='gene_locus'\n        type='text'\n        component={fieldInput}\n        label='Gene Locus'\n      />\n      <Field\n        name='organism'\n        type='text'\n        component={fieldInput}\n        label='Organism'\n      />\n      <Field\n        name='company'\n        type='text'\n        component={fieldInput}\n        label='Company'\n      />\n      <Field\n        name='concentration'\n        type='text'\n        component={fieldInput}\n        label='Concentration'\n      />\n      <Field\n        name='grade'\n        type='text'\n        component={fieldInput}\n        label='Grade'\n      />\n      <br />\n      <Row>\n        <div className='button'>\n          <Button variant='primary' type='submit'>Submit</Button>\n        </div>\n        {/* <div className='button'>\n          <Button variant='primary' type='submit' onClick={reset}>Clear Form</Button>\n        </div> */}\n        <div className='button'>\n          <Button variant='primary'\n            onClick={() => history.goBack()}\n          >\n            Cancel\n          </Button>\n        </div>\n      </Row>\n    </Form>\n  );\n}\n\n// const required = value => (value ? undefined : 'This field is required');\n\nconst validate = values => {\n    const result = {};\n    if (!values.oligo_name) {\n      result.oligo_name = 'Please enter an Oligo name';\n    };\n    return result;\n  }\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n});\n\nOligoForm = connect(\n  mapStateToProps,\n)(OligoForm);\n\nexport default reduxForm({\n  form: 'createOligo',\n  validate,\n  touchOnBlur: false,\n  enableReinitialize: true,\n// keepDirtyOnReinitialize : true\n})(OligoForm);","import React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { getOligo, addOligo, editOligo } from '../../actions/oligos';\nimport OligoForm from './OligoForm';\n\n\nfunction OligoAddEdit(props) {\n\n  const [mode, setMode] = useState(undefined);\n  const [user, setUser] = useState('');\n  const { id } = useParams();\n  const isAddMode = !id;\n\n  const onSubmit = formValues => {\n    isAddMode ? props.addOligo(formValues) : props.editOligo(id, formValues);\n  };\n\n  useEffect(() => {\n    // TODO: differentiate between edit, copy\n    if (!isAddMode) {\n      props.getOligo(id);\n      // setData(props.oligo);\n      setMode('Edit');\n    } else {\n      setMode('Add');\n    };\n    setUser(props.auth.user.username);\n  }, [id, isAddMode, props.auth.user.username])\n\n\n  return (\n    <React.Fragment>\n      <h2 className='title'>{mode} Oligo</h2>\n      <br />\n      { user ?\n        <OligoForm\n          onSubmit={onSubmit}\n          initialValues={{\n            'username': user,\n            ...props.oligo\n          }}\n        />\n        : null\n      }\n      <br />\n    </React.Fragment>\n  )\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  oligo: state.oligos[ownProps.match.params.id],\n  auth: state.auth\n});\n\nexport default connect(\n  mapStateToProps,\n  { getOligo, addOligo, editOligo }\n)(OligoAddEdit);","import React from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport {\n  FormControl,\n  Form,\n  Button,\n  Row,\n  Col\n} from 'react-bootstrap';\n\nimport { register } from '../../actions/auth';\n\n\nconst fieldInput = ({ input, label, type, placeholder, meta: { touched, error } }) => {\n    return (\n      <Form.Group as={Row}>\n        <Form.Label column sm={4}>{label}</Form.Label>\n        <Col sm={8}>\n          <FormControl\n            type={type}\n            placeholder={placeholder}\n            value={input.value}\n            onChange={input.onChange}\n          />\n          <div className={`${touched && error ? 'error' : ''}`}>\n            {touched && error && (\n              <span className='red-lbl'>{error}</span>\n            )}\n          </div>\n        </Col>\n      </Form.Group>\n    )\n  };\n\nlet RegisterForm = props => {\n\n  const onSubmit = formValues => {\n    props.register(formValues);\n  };\n\n  if (props.isAuthenticated) {\n    return <Redirect to='/' />;\n  };\n\n  return (\n    <Form className='frm' onSubmit={props.handleSubmit(onSubmit)}>\n      <Field\n        name='username'\n        type='text'\n        component={fieldInput}\n        placeholder='Username'\n        label='Username'\n        validate={[required, minLength3, maxLength15]}\n      />\n      <Field\n        name='email'\n        type='email'\n        component={fieldInput}\n        placeholder='example@email.com'\n        label='Email'\n        validate={required}\n      />\n      <Field\n        name='password'\n        type='password'\n        component={fieldInput}\n        placeholder='Password'\n        label='Password'\n        validate={required}\n      />\n      <Field\n        name='password2'\n        type='password'\n        component={fieldInput}\n        placeholder='Password'\n        label='Confirm Password'\n        validate={[required, passwordMatch]}\n      />\n      <div>\n        <Button variant='primary' type='submit'>Register</Button>\n      </div>\n      <Form.Text className='frm-txt'>\n        Already have an account? <Link to='/login'>Login</Link>\n      </Form.Text>\n    </Form>\n  );\n}\n\nconst required = value => (value ? undefined : 'Required');\n\nconst minLength = min => value =>\nvalue && value.length < min\n  ? `Must be at least ${min} characters`\n  : undefined;\n\nconst maxLength = max => value =>\nvalue && value.length > max\n  ? `Must be ${max} characters or less`\n  : undefined;\n\nconst minLength3 = minLength(3);\nconst maxLength15 = maxLength(15);\n\nconst passwordMatch = (value, allValues) =>\n  value !== allValues.password ? 'Passwords do not match' : undefined;\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nRegisterForm = connect(\n  mapStateToProps,\n  { register }\n)(RegisterForm);\n\nexport default reduxForm({\n  form: 'registerForm'\n})(RegisterForm);","import React from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport {\n  FormControl,\n  Form,\n  Button,\n  Row,\n  Col\n} from 'react-bootstrap';\n\nimport { login } from '../../actions/auth';\n\n\nconst fieldInput = ({ input, label, type, placeholder, meta: { touched, error } }) => {\n    return (\n      <Form.Group as={Row}>\n        <Form.Label column sm={2}>{label}</Form.Label>\n        <Col sm={8}>\n          <FormControl\n            type={type}\n            placeholder={placeholder}\n            value={input.value}\n            onChange={input.onChange}\n          />\n          <div className={`${touched && error ? 'error' : ''}`}>\n            {touched && error && (\n              <span className='red-lbl'>{error}</span>\n            )}\n          </div>\n        </Col>\n      </Form.Group>\n    )\n  };\n\nlet LoginForm = props => {\n\n  const hiddenField = ({ type, meta: { error } }) => {\n    return (\n      <div className='field'>\n        <input type={type} />\n        {error && <div className='error'>{error}</div>}\n      </div>\n    );\n  };\n\n  const onSubmit = formValues => {\n    props.login(formValues);\n  };\n\n  if (props.isAuthenticated) {\n    return <Redirect to='/' />;\n  };\n\n  return (\n    <Form className='frm' onSubmit={props.handleSubmit(onSubmit)}>\n      <Field\n        name='username'\n        type='text'\n        component={fieldInput}\n        label='Username'\n        placeholder='Username'\n      />\n      <Field\n        name='password'\n        type='password'\n        component={fieldInput}\n        label='Password'\n        placeholder='Password'\n      />\n      <div>\n        <Field\n          name='non_field_errors'\n          type='hidden'\n          component={hiddenField}\n        />\n      </div>\n      <div>\n        <Button variant='primary' type='submit'>Login</Button>\n      </div>\n      <Form.Text className='frm-txt'>\n        Don't have an account? <Link to='/register'>Register Now</Link>\n      </Form.Text>\n    </Form>\n  );\n}\n\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nLoginForm = connect(\n  mapStateToProps,\n  { login }\n)(LoginForm);\n\nexport default reduxForm({\n  form: 'loginForm'\n})(LoginForm);","//adapted from https://medium.com/technest/implement-user-auth-in-a-django-react-app-with-knox-fc56cdc9211c\n\nimport {\n  USER_LOADED,\n  USER_LOADING,\n  AUTH_ERROR,\n  LOGIN_FAIL,\n  LOGIN_SUCCESS,\n  LOGOUT_SUCCESS,\n  REGISTER_FAIL,\n  REGISTER_SUCCESS\n} from '../actions/types';\n\n\nconst initialState = {\n  isLoading: false,\n  isAuthenticated: null,\n  user: '',\n  token: localStorage.getItem('token'),\n  error: null,\n}\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case USER_LOADING:\n      return {\n        ...state,\n        isLoading: true\n      };\n    case USER_LOADED:\n      return {\n        ...state,\n        isLoading: false,\n        isAuthenticated: true,\n        user: action.payload\n      };\n    case REGISTER_SUCCESS:\n    case LOGIN_SUCCESS:\n      //tokens are stored in a web browser using the localStorage property that has no expiration date & is a read-only\n      localStorage.setItem('token', action.payload.token);\n      return {\n        ...state,\n        isLoading: false,\n        isAuthenticated: true,\n        ...action.payload\n      };\n    case AUTH_ERROR:\n    case REGISTER_FAIL:\n    case LOGIN_FAIL:\n    case LOGOUT_SUCCESS:\n      localStorage.removeItem('token');\n      return {\n        ...state,\n        isLoading: false,\n        isAuthenticated: false,\n        user: null,\n        token: null,\n        error: true,\n      };\n    default:\n      return state;\n  }\n}\n","// import { getOligos } from '../actions/oligos';\nimport auth from './auth';\nimport { combineReducers } from 'redux';\nimport { reducer as formReducer } from 'redux-form';\nimport oligos from './oligos';\nimport { LOGOUT_SUCCESS } from '../actions/types';\n\n\nconst appReducer = combineReducers({\n    form: formReducer,\n    oligos,\n    auth\n});\n\nconst rootReducer = (state, action) => {\n    if (action.type === LOGOUT_SUCCESS) {\n        state = undefined;\n    }\n    return appReducer(state, action);\n};\n\nexport default rootReducer;","import _ from 'lodash';\nimport {\n  EDIT_OLIGO, GET_OLIGOS, GET_OLIGO, ADD_OLIGO, DELETE_OLIGO, BAD_REQUEST\n} from '../actions/types';\n\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default (state = {}, action) => {\n  switch (action.type) {\n    case GET_OLIGOS:\n      return {\n        ...state,\n        ..._.mapKeys(action.payload, 'id')\n      };\n    case GET_OLIGO:\n    case ADD_OLIGO:\n    case EDIT_OLIGO:\n      return {\n        ...state,\n        [action.payload.id]: action.payload\n      };\n    case DELETE_OLIGO:\n      return _.omit(state, action.payload);\n    case BAD_REQUEST:\n      return {\n        ...state,\n        error: true,\n      }\n    default:\n      return state;\n  }\n};","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport reduxThunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\n\nconst store = createStore(\n    rootReducer,\n    composeWithDevTools(applyMiddleware(reduxThunk))\n);\n\nexport default store\n","import React, { useEffect } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport Header from './components/Header';\nimport Navbar from './components/Navbar';\nimport Home from './components/Home';\nimport OligoList from './components/oligos/OligoList';\nimport OligoDetails from './components/oligos/OligoDetails';\nimport OligoAddEdit from './components/oligos/OligoAddEdit';\nimport RegisterForm from './components/auth/RegisterForm';\nimport LoginForm from './components/auth/LoginForm';\nimport './App.css';\nimport { loadUser } from './actions/auth';\nimport store from './store';\n\n\nfunction App(props) {\n\n  useEffect(() => {\n    store.dispatch(loadUser());\n  }, [])\n\n  return (\n    <Provider store={store}>\n      <div className='app'>\n        <Router>\n          <Header />\n          <div className='body' {...props}>\n            <Navbar />\n            <div className='body-main'>\n              <Switch>\n                <Route exact path='/' component={Home} />\n                <Route path='/register' exact component={RegisterForm} />\n                <Route path='/login' exact component={LoginForm} />\n                <Route path='/oligos' exact component={OligoList} />\n                <Route path='/oligo_details/:id' component={OligoDetails} />\n                <Route path='/add' component={OligoAddEdit} />\n                <Route path='/edit/:id/' component={OligoAddEdit} />\n                <Route path='/copy/:id/' component={OligoAddEdit} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n        <div className='footer'>\n          <p>Receptor 2021 by Thomas Oh and Abeer Eltanawy</p>\n        </div>\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider as AlertProvider } from 'react-alert';\nimport AlertTemplate from 'react-alert-template-basic';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <AlertProvider template={AlertTemplate}>\n      <App />\n    </AlertProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}